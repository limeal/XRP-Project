services:
    postgres:
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - 5432:5432
        volumes:
            - db_data:/var/lib/postgresql/data
        networks:
            - blockchain-network

    # rabbitmq
    rabbitmq:
        image: rabbitmq:latest
        restart: always
        ports:
            - 5672:5672
        networks:
            - blockchain-network

    backend:
        build:
            dockerfile: ./Dockerfile.dev
            context: packages/backend
        env_file:
            - packages/backend/.env
        depends_on:
            - postgres
        volumes:
          - ./packages/backend:/backend
        ports:
            - 3000:3000
        restart: unless-stopped
        networks:
            - blockchain-network
        labels:
            - dev.orbstack.domains=api.blockchain.local

    ledger-bridge:
        build:
            dockerfile: ./Dockerfile.dev
            context: packages/ledger-bridge
        env_file:
            - packages/ledger-bridge/.env
        depends_on:
            - backend
        volumes:
            - ./packages/ledger-bridge:/ledger-bridge
        ports:
            - 8082:8082
        restart: unless-stopped
        networks:
            - blockchain-network
        labels:
            - dev.orbstack.domains=ledger-bridge.blockchain.local

    frontend:
        build:
            dockerfile: ./Dockerfile.dev
            context: packages/frontend
        env_file:
            - packages/frontend/.env
        depends_on:
            - backend
        volumes:
            - ./packages/frontend:/frontend
        ports:
            - 8080:8080
        restart: unless-stopped
        networks:
            - blockchain-network
        labels:
            - dev.orbstack.domains=app.blockchain.local

volumes:
    db_data: {}

networks:
    blockchain-network: